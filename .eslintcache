[{"D:\\ReactTraining\\e-commerce\\src\\index.js":"1","D:\\ReactTraining\\e-commerce\\src\\reportWebVitals.js":"2","D:\\ReactTraining\\e-commerce\\src\\App.js":"3","D:\\ReactTraining\\e-commerce\\src\\components\\Products\\Products.jsx":"4","D:\\ReactTraining\\e-commerce\\src\\components\\Navbar\\Navbar.jsx":"5","D:\\ReactTraining\\e-commerce\\src\\components\\index.js":"6","D:\\ReactTraining\\e-commerce\\src\\components\\Navbar\\styles.js":"7","D:\\ReactTraining\\e-commerce\\src\\components\\Products\\Product\\Product.jsx":"8","D:\\ReactTraining\\e-commerce\\src\\components\\Products\\Product\\styles.js":"9","D:\\ReactTraining\\e-commerce\\src\\components\\Products\\styles.js":"10","D:\\ReactTraining\\e-commerce\\src\\lib\\commerce.js":"11","D:\\ReactTraining\\e-commerce\\src\\components\\Cart\\styles.js":"12","D:\\ReactTraining\\e-commerce\\src\\components\\Cart\\Cart.jsx":"13","D:\\ReactTraining\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"14","D:\\ReactTraining\\e-commerce\\src\\components\\Cart\\CartItem\\styles.js":"15","D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\Checkout.jsx":"16","D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\styles.js":"17","D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"19","D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"20","D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx":"21"},{"size":266,"mtime":1610612500082,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2576,"mtime":1611336375416,"results":"25","hashOfConfig":"23"},{"size":1294,"mtime":1611309746610,"results":"26","hashOfConfig":"23"},{"size":1553,"mtime":1611385127398,"results":"27","hashOfConfig":"23"},{"size":242,"mtime":1610954302742,"results":"28","hashOfConfig":"23"},{"size":1633,"mtime":1610620394663,"results":"29","hashOfConfig":"23"},{"size":1307,"mtime":1611313533910,"results":"30","hashOfConfig":"23"},{"size":372,"mtime":1610615537876,"results":"31","hashOfConfig":"23"},{"size":300,"mtime":1610622269958,"results":"32","hashOfConfig":"23"},{"size":138,"mtime":1610623319552,"results":"33","hashOfConfig":"23"},{"size":780,"mtime":1611067505414,"results":"34","hashOfConfig":"23"},{"size":2505,"mtime":1611392416586,"results":"35","hashOfConfig":"23"},{"size":1506,"mtime":1611394526577,"results":"36","hashOfConfig":"23"},{"size":351,"mtime":1610699346777,"results":"37","hashOfConfig":"23"},{"size":4292,"mtime":1611641813968,"results":"38","hashOfConfig":"23"},{"size":1210,"mtime":1610956686937,"results":"39","hashOfConfig":"23"},{"size":2851,"mtime":1611473664220,"results":"40","hashOfConfig":"23"},{"size":5351,"mtime":1611585810306,"results":"41","hashOfConfig":"23"},{"size":549,"mtime":1611476566166,"results":"42","hashOfConfig":"23"},{"size":991,"mtime":1611646136273,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ovh399",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ReactTraining\\e-commerce\\src\\index.js",[],["89","90"],"D:\\ReactTraining\\e-commerce\\src\\reportWebVitals.js",[],"D:\\ReactTraining\\e-commerce\\src\\App.js",["91"],"import React, { useState, useEffect } from \"react\";\nimport { Products, Navbar, Cart, Checkout } from \"./components\";\nimport { commerce } from \"./lib/commerce\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n  const [order, setOrder] = useState({});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const fetchProducts = async () => {\n    const { data } = await commerce.products.list();\n\n    setProducts(data);\n  };\n\n  const fetchCart = async () => {\n    setCart(await commerce.cart.retrieve());\n  };\n\n  const handleAddToCart = async (productId, quantity) => {\n    const { cart } = await commerce.cart.add(productId, quantity);\n    setCart(cart);\n  };\n\n  const handleUpdateCartQty = async (productId, quantity) => {\n    const { cart } = await commerce.cart.update(productId, { quantity });\n    setCart(cart);\n  };\n\n  const handleRemoveFromCart = async (productId) => {\n    const { cart } = await commerce.cart.remove(productId);\n    setCart(cart);\n  };\n\n  const handleEmptyCart = async () => {\n    const { cart } = await commerce.cart.empty();\n    setCart(cart);\n  };\n\n  const refreshCart = async () => {\n    const newCart = await commerce.cart.refresh();\n  };\n\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n    try {\n      const incomingOrder = await commerce.checkout.capture(\n        checkoutTokenId,\n        newOrder\n      );\n      setOrder(incomingOrder);\n      refreshCart();\n    } catch (error) {\n      setErrorMessage(error.data.error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCart();\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        <Navbar totalItems={cart.total_items} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Products products={products} onAddToCart={handleAddToCart} />\n          </Route>\n          <Route exact path=\"/cart\">\n            <Cart\n              cart={cart}\n              handleUpdateCartQty={handleUpdateCartQty}\n              handleRemoveFromCart={handleRemoveFromCart}\n              handleEmptyCart={handleEmptyCart}\n            />\n          </Route>\n          <Route exact path=\"/checkout\">\n            <Checkout\n              cart={cart}\n              order={order}\n              onCaptureCheckout={handleCaptureCheckout}\n              error={errorMessage}\n              handleEmptyCart={handleEmptyCart}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","D:\\ReactTraining\\e-commerce\\src\\components\\Products\\Products.jsx",[],"D:\\ReactTraining\\e-commerce\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\ReactTraining\\e-commerce\\src\\components\\index.js",[],"D:\\ReactTraining\\e-commerce\\src\\components\\Navbar\\styles.js",[],"D:\\ReactTraining\\e-commerce\\src\\components\\Products\\Product\\Product.jsx",[],"D:\\ReactTraining\\e-commerce\\src\\components\\Products\\Product\\styles.js",[],"D:\\ReactTraining\\e-commerce\\src\\components\\Products\\styles.js",[],"D:\\ReactTraining\\e-commerce\\src\\lib\\commerce.js",[],"D:\\ReactTraining\\e-commerce\\src\\components\\Cart\\styles.js",[],"D:\\ReactTraining\\e-commerce\\src\\components\\Cart\\Cart.jsx",[],"D:\\ReactTraining\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"D:\\ReactTraining\\e-commerce\\src\\components\\Cart\\CartItem\\styles.js",[],"D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\Checkout.jsx",["92"],"D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\styles.js",[],"D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["93","94"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport FormInput from \"./CustomTextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { commerce } from \"../../lib/commerce\";\r\n\r\nconst AddressForm = ({ checkoutToken, nextStep }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n  const methods = useForm();\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(\r\n    ([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    })\r\n  );\r\n  const options = shippingOptions.map((sO) => ({\r\n    id: sO.id,\r\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\r\n  }));\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    region = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            nextStep({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput name=\"firstName\" label=\"First Name\" />\r\n            <FormInput name=\"lastName\" label=\"Last Name\" />\r\n            <FormInput name=\"address1\" label=\"Address\" />\r\n            <FormInput name=\"email\" label=\"Email\" />\r\n            <FormInput name=\"city\" label=\"City\" />\r\n            <FormInput name=\"zip\" label=\"ZIP / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                fullWidth\r\n                onChange={(e) => setShippingCountry(e.target.value)}\r\n              >\r\n                {countries.map((country) => (\r\n                  <MenuItem key={country.id} value={country.id}>\r\n                    {country.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select\r\n                value={shippingSubdivision}\r\n                fullWidth\r\n                onChange={(e) => setShippingSubdivision(e.target.value)}\r\n              >\r\n                {subdivisions.map((subdivision) => (\r\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                    {subdivision.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                value={shippingOption}\r\n                fullWidth\r\n                onChange={(e) => setShippingOption(e.target.value)}\r\n              >\r\n                {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Button component={Link} to=\"/cart\" variant=\"outlined\">\r\n              Back to Cart\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"D:\\ReactTraining\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":43,"column":11,"nodeType":"101","messageId":"102","endLine":43,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":55,"column":6,"nodeType":"105","endLine":55,"endColumn":12,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":70,"column":6,"nodeType":"105","endLine":70,"endColumn":8,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"109","line":83,"column":6,"nodeType":"105","endLine":83,"endColumn":27,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'newCart' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"122","text":"123"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"124","text":"125"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"126","text":"127"},[1522,1528],"[activeStep, cart, history]",[2182,2184],"[checkoutToken.id]",[2478,2499],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]